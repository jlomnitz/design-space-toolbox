State 0:
          start ::= * expression
          expression ::= * pterms PLUS mterms
          expression ::= * mterms PLUS pterms
          expression ::= * expression PLUS mterms
          expression ::= * expression PLUS pterms
          pterms ::= * term
          pterms ::= * pterms PLUS term
          mterms ::= * mterm
          mterms ::= * mterms PLUS mterm
          mterm ::= * MINUS term
          term ::= * powerlaw
          term ::= * PLUS powerlaw
          term ::= * term TIMES powerlaw
          term ::= * term DIVIDE powerlaw
          powerlaw ::= * CONSTANT
          powerlaw ::= * ID
          powerlaw ::= * ID POWER CONSTANT
          powerlaw ::= * ID POWER MINUS CONSTANT

                            ID shift  17
                          PLUS shift  6
                         MINUS shift  5
                      CONSTANT shift  31
                         start accept
                    expression shift  10
                        pterms shift  15
                        mterms shift  16
                          term shift  14
                         mterm shift  24
                      powerlaw shift  30

State 1:
          expression ::= expression PLUS * mterms
          expression ::= expression PLUS * pterms
          pterms ::= * term
          pterms ::= * pterms PLUS term
          mterms ::= * mterm
          mterms ::= * mterms PLUS mterm
          mterm ::= * MINUS term
          term ::= * powerlaw
          term ::= * PLUS powerlaw
          term ::= * term TIMES powerlaw
          term ::= * term DIVIDE powerlaw
          powerlaw ::= * CONSTANT
          powerlaw ::= * ID
          powerlaw ::= * ID POWER CONSTANT
          powerlaw ::= * ID POWER MINUS CONSTANT

                            ID shift  17
                          PLUS shift  6
                         MINUS shift  5
                      CONSTANT shift  31
                        pterms shift  20
                        mterms shift  28
                          term shift  14
                         mterm shift  24
                      powerlaw shift  30

State 2:
          expression ::= pterms PLUS * mterms
          pterms ::= pterms PLUS * term
          mterms ::= * mterm
          mterms ::= * mterms PLUS mterm
          mterm ::= * MINUS term
          term ::= * powerlaw
          term ::= * PLUS powerlaw
          term ::= * term TIMES powerlaw
          term ::= * term DIVIDE powerlaw
          powerlaw ::= * CONSTANT
          powerlaw ::= * ID
          powerlaw ::= * ID POWER CONSTANT
          powerlaw ::= * ID POWER MINUS CONSTANT

                            ID shift  17
                          PLUS shift  6
                         MINUS shift  5
                      CONSTANT shift  31
                        mterms shift  26
                          term shift  13
                         mterm shift  24
                      powerlaw shift  30

State 3:
          expression ::= mterms PLUS * pterms
          pterms ::= * term
          pterms ::= * pterms PLUS term
          mterms ::= mterms PLUS * mterm
          mterm ::= * MINUS term
          term ::= * powerlaw
          term ::= * PLUS powerlaw
          term ::= * term TIMES powerlaw
          term ::= * term DIVIDE powerlaw
          powerlaw ::= * CONSTANT
          powerlaw ::= * ID
          powerlaw ::= * ID POWER CONSTANT
          powerlaw ::= * ID POWER MINUS CONSTANT

                            ID shift  17
                          PLUS shift  6
                         MINUS shift  5
                      CONSTANT shift  31
                        pterms shift  23
                          term shift  14
                         mterm shift  25
                      powerlaw shift  30

State 4:
          pterms ::= pterms PLUS * term
          term ::= * powerlaw
          term ::= * PLUS powerlaw
          term ::= * term TIMES powerlaw
          term ::= * term DIVIDE powerlaw
          powerlaw ::= * CONSTANT
          powerlaw ::= * ID
          powerlaw ::= * ID POWER CONSTANT
          powerlaw ::= * ID POWER MINUS CONSTANT

                            ID shift  17
                          PLUS shift  6
                      CONSTANT shift  31
                          term shift  13
                      powerlaw shift  30

State 5:
          mterm ::= MINUS * term
          term ::= * powerlaw
          term ::= * PLUS powerlaw
          term ::= * term TIMES powerlaw
          term ::= * term DIVIDE powerlaw
          powerlaw ::= * CONSTANT
          powerlaw ::= * ID
          powerlaw ::= * ID POWER CONSTANT
          powerlaw ::= * ID POWER MINUS CONSTANT

                            ID shift  17
                          PLUS shift  6
                      CONSTANT shift  31
                          term shift  11
                      powerlaw shift  30

State 6:
          term ::= PLUS * powerlaw
          powerlaw ::= * CONSTANT
          powerlaw ::= * ID
          powerlaw ::= * ID POWER CONSTANT
          powerlaw ::= * ID POWER MINUS CONSTANT

                            ID shift  17
                      CONSTANT shift  31
                      powerlaw shift  19

State 7:
          term ::= term DIVIDE * powerlaw
          powerlaw ::= * CONSTANT
          powerlaw ::= * ID
          powerlaw ::= * ID POWER CONSTANT
          powerlaw ::= * ID POWER MINUS CONSTANT

                            ID shift  17
                      CONSTANT shift  31
                      powerlaw shift  29

State 8:
          term ::= term TIMES * powerlaw
          powerlaw ::= * CONSTANT
          powerlaw ::= * ID
          powerlaw ::= * ID POWER CONSTANT
          powerlaw ::= * ID POWER MINUS CONSTANT

                            ID shift  17
                      CONSTANT shift  31
                      powerlaw shift  21

State 9:
          mterms ::= mterms PLUS * mterm
          mterm ::= * MINUS term

                         MINUS shift  5
                         mterm shift  25

State 10:
      (0) start ::= expression *
          expression ::= expression * PLUS mterms
          expression ::= expression * PLUS pterms

                             $ reduce 0
                          PLUS shift  1

State 11:
      (9) mterm ::= MINUS term *
          term ::= term * TIMES powerlaw
          term ::= term * DIVIDE powerlaw

                        DIVIDE shift  7
                         TIMES shift  8
                     {default} reduce 9

State 12:
          powerlaw ::= ID POWER * CONSTANT
          powerlaw ::= ID POWER * MINUS CONSTANT

                         MINUS shift  18
                      CONSTANT shift  27

State 13:
      (6) pterms ::= pterms PLUS term *
          term ::= term * TIMES powerlaw
          term ::= term * DIVIDE powerlaw

                        DIVIDE shift  7
                         TIMES shift  8
                     {default} reduce 6

State 14:
      (5) pterms ::= term *
          term ::= term * TIMES powerlaw
          term ::= term * DIVIDE powerlaw

                        DIVIDE shift  7
                         TIMES shift  8
                     {default} reduce 5

State 15:
          expression ::= pterms * PLUS mterms
          pterms ::= pterms * PLUS term

                          PLUS shift  2

State 16:
          expression ::= mterms * PLUS pterms
          mterms ::= mterms * PLUS mterm

                          PLUS shift  3

State 17:
     (15) powerlaw ::= ID *
          powerlaw ::= ID * POWER CONSTANT
          powerlaw ::= ID * POWER MINUS CONSTANT

                         POWER shift  12
                     {default} reduce 15

State 18:
          powerlaw ::= ID POWER MINUS * CONSTANT

                      CONSTANT shift  22

State 19:
     (11) term ::= PLUS powerlaw *

                     {default} reduce 11

State 20:
      (4) expression ::= expression PLUS pterms *
          pterms ::= pterms * PLUS term

                     {default} reduce 4

State 21:
     (12) term ::= term TIMES powerlaw *

                     {default} reduce 12

State 22:
     (17) powerlaw ::= ID POWER MINUS CONSTANT *

                     {default} reduce 17

State 23:
      (2) expression ::= mterms PLUS pterms *
          pterms ::= pterms * PLUS term

                     {default} reduce 2

State 24:
      (7) mterms ::= mterm *

                     {default} reduce 7

State 25:
      (8) mterms ::= mterms PLUS mterm *

                     {default} reduce 8

State 26:
      (1) expression ::= pterms PLUS mterms *
          mterms ::= mterms * PLUS mterm

                     {default} reduce 1

State 27:
     (16) powerlaw ::= ID POWER CONSTANT *

                     {default} reduce 16

State 28:
      (3) expression ::= expression PLUS mterms *
          mterms ::= mterms * PLUS mterm

                     {default} reduce 3

State 29:
     (13) term ::= term DIVIDE powerlaw *

                     {default} reduce 13

State 30:
     (10) term ::= powerlaw *

                     {default} reduce 10

State 31:
     (14) powerlaw ::= CONSTANT *

                     {default} reduce 14

----------------------------------------------------
Symbols:
    0: $:
    1: ID
    2: PLUS
    3: MINUS
    4: DIVIDE
    5: TIMES
    6: POWER
    7: NOT
    8: CONSTANT
    9: error:
   10: start: ID PLUS MINUS CONSTANT
   11: expression: ID PLUS MINUS CONSTANT
   12: pterms: ID PLUS CONSTANT
   13: mterms: MINUS
   14: term: ID PLUS CONSTANT
   15: mterm: MINUS
   16: powerlaw: ID CONSTANT
